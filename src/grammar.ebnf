shapes : (nodeshape | edgeshape | COMMENT)*
nodeshape : "NODE" shape "[" nodetarget "]" "{" nodeconstraint "}" ";"
edgeshape : "EDGE" shape "[" edgetarget "]" "{" edgeconstraint "}" ";"

nodetarget : ":" label
              | NUMBER -> nid
              | "BOTTOM" -> bot
              | property "=" value -> propvalue
              | property -> propertytarget

?nodeconstraint : nodeconstraint_or
?nodeconstraint_or : [nodeconstraint_or "|"] nodeconstraint_and
?nodeconstraint_and  : [nodeconstraint_and "&"] nodeconstraint_basic
nodeconstraint_basic : "TOP" -> top
                      | "BOTTOM" -> bot
                      | shape -> shaperef
                      | ":" label
                      | NUMBER -> rnid
                      | "!" nodeconstraint_basic -> negate
                      | comp NUMBER choicepath "." nodeconstraint_basic -> greatereq
                      | comp NUMBER property "." predicate -> countprop
                      | comp NUMBER edgeconstraint -> greatereqe
                      | choicepath "==" choicepath -> compare
                      | choicepath property "==" path property -> comparevalue
                      | property "==" property -> equals
                      | "(" nodeconstraint ")"

?choicepath : [choicepath "|"] concatpath
?concatpath : [concatpath "/"] path
path : ":" label
     | "-" path -> negatepath
     | "(" choicepath ")"
     | path "+" -> repeatpath

predicate : "string" -> string
          | "int" -> int
          | "=" value -> eqvalue

edgetarget : ":" label
              | NUMBER -> eid
              | "BOTTOM" -> bot
              | property "=" value -> propvalue
              | property -> propertytarget

?edgeconstraint : edgeconstraint_or
?edgeconstraint_or : [edgeconstraint_or "|"] edgeconstraint_and
?edgeconstraint_and  : [edgeconstraint_and "&"] edgeconstraint_basic
edgeconstraint_basic : "TOP" -> top
                      | "BOTTOM" -> bot
                      | shape -> shaperef
                      | ":" label
                      | NUMBER -> reid
                      | "!" edgeconstraint_basic -> negate
                      | comp NUMBER property "." predicate -> countprop
                      | property "==" property -> equals
                      | "<<" nodeconstraint_basic -> left
                      | ">>" nodeconstraint_basic -> right
                      | "(" edgeconstraint ")"

?value : "\"" STRING "\"" -> stringvalue
       | NUMBER -> intvalue

comp : "<=" -> le
     | ">=" -> ge
     | ">" -> gr
     | "<" -> ls
     | "=" -> eq

shape : WORD
label : WORD
property : WORD
labelref : WORD

WORD : LCASE_LETTER CHAR+
CHAR : LETTER | DIGIT | "_"
NUMBER : DIGIT+
SCHAR : CHAR | WS
STRING : SCHAR+

COMMENT : "%" /(.)*/ NEWLINE

%import common.LCASE_LETTER
%import common.LETTER
%import common.NEWLINE
%import common.DIGIT
%import common.WS
%ignore WS
%ignore COMMENT